version: 2.1

docker_defaults: &docker_defaults
  docker:
    - image: circleci/node:latest

commands:
  prep_env:
    description: Prepares environment with cache
    steps:
      - checkout:
          path: ~/repo
      #      - run:
      #          name: 'Update Node.js and npm'
      #          command: |
      #            curl -sSL "https://nodejs.org/dist/v12.13.0/node-v12.13.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v12.13.0-linux-x64/bin/node
      #            curl https://www.npmjs.com/install.sh | sudo bash
      - run:
          name: Check current version of node
          command: node -v
      - restore_cache:
          name: Restore node_modules cache
          keys:
            - github-action-screenshots-{{ checksum "package-lock.json" }}-{{ .Branch }} # appends cache key with a hash of pom.xml file
            - github-action-screenshots- # fallback in case previous cache key is not found

  save_env_cache:
    description: Saves environment cache
    steps:
      - save_cache:
          name: Save node_modules cache
          key: github-action-screenshots-{{ checksum "package-lock.json" }}-{{ .Branch }}
          paths:
            - node_modules/

jobs:
  node_modules:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - run: npm install
      - save_env_cache

  publish_release:
    <<: *docker_defaults
    working_directory: ~/repo
    steps:
      - prep_env
      - run:
          name: Don't allow install of package, when published
          command:
            cat package.json | jq '.scripts.postinstall = "node index.js"' > package.json.tmp && mv
            package.json.tmp package.json
      - run:
          name: Semantic release to NPM and GitHub releases
          command: npx -p @semantic-release/release-notes-generator -p @semantic-release/npm -p @semantic-release/github semantic-release

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - node_modules:
          filters:
            branches:
              only:
                - master
      - publish_release:
          requires:
            - node_modules
          filters:
            branches:
              only:
                - master

experimental:
  notify:
    branches:
      only:
        - master
